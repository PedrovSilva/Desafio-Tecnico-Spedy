// <auto-generated />
using System;
using ClassificadosApi.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ClassificadosApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240423191511_PopularTabela")]
    partial class PopularTabela
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ClassificadosApi.Models.Classificado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Classificados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2024, 4, 23, 15, 15, 11, 34, DateTimeKind.Local).AddTicks(4585),
                            Descricao = "Descricao teste teste teste",
                            Titulo = "Teste 1"
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateTime(2024, 4, 23, 15, 15, 11, 34, DateTimeKind.Local).AddTicks(4597),
                            Descricao = "teste Descriao",
                            Titulo = "Teste 2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
